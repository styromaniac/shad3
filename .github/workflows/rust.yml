name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install dependencies (Linux GNU)
      if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev

    - name: Install dependencies (Linux MUSL)
      if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-unknown-linux-musl'
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools
        sudo apt-get install -y pkg-config libssl-dev
        mkdir -p ~/.cargo
        echo '[target.x86_64-unknown-linux-musl]' >> ~/.cargo/config
        echo 'rustflags = ["-C", "target-feature=+crt-static"]' >> ~/.cargo/config

    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings

    - name: Build
      uses: actions-rs/cargo@v1
      env:
        OPENSSL_DIR: /usr
        OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu
        OPENSSL_INCLUDE_DIR: /usr/include/openssl
      with:
        command: build
        args: --verbose --release --target ${{ matrix.target }}

    - name: Run tests
      uses: actions-rs/cargo@v1
      env:
        OPENSSL_DIR: /usr
        OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu
        OPENSSL_INCLUDE_DIR: /usr/include/openssl
      with:
        command: test
        args: --verbose --target ${{ matrix.target }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target }}-build
        path: target/${{ matrix.target }}/release/

  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '--ignore-tests'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml
